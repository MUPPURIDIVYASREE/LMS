{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/Documents/vscode/mini/client/src/components/LoginSignup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./LoginSignup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginSignup({\n  formType,\n  setIsLoggedIn\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // React Router navigation\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Assuming the login/signup is always successful\n    if (formType === 'login') {\n      setIsLoggedIn(true);\n      navigate('/dashboard'); // Redirect to dashboard after login\n    }\n    // Handle sign-up logic similarly if needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-signup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"homepage-title\",\n        children: formType === 'login' ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email\",\n          className: \"auth-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          className: \"auth-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `auth-button ${formType === 'login' ? 'login-button' : 'signup-button'}`,\n          children: formType === 'login' ? 'Login' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-text\",\n        onClick: () => navigate(formType === 'login' ? '/signup' : '/login'),\n        children: formType === 'login' ? 'Don’t have an account? Sign Up' : 'Already have an account? Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginSignup, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginSignup;\nexport default LoginSignup;\nvar _c;\n$RefreshReg$(_c, \"LoginSignup\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginSignup","formType","setIsLoggedIn","_s","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/home/apiiit123/Documents/vscode/mini/client/src/components/LoginSignup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./LoginSignup.css\";\n\nfunction LoginSignup({ formType, setIsLoggedIn }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // React Router navigation\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Assuming the login/signup is always successful\n    if (formType === 'login') {\n      setIsLoggedIn(true);\n      navigate('/dashboard'); // Redirect to dashboard after login\n    }\n    // Handle sign-up logic similarly if needed\n  };\n\n  return (\n    <div className=\"login-signup-container\">\n      <div className=\"form-container\">\n        <h2 className=\"homepage-title\">{formType === 'login' ? 'Login' : 'Sign Up'}</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Email\"\n            className=\"auth-input\"\n            required\n          />\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Password\"\n            className=\"auth-input\"\n            required\n          />\n          <button type=\"submit\" className={`auth-button ${formType === 'login' ? 'login-button' : 'signup-button'}`}>\n            {formType === 'login' ? 'Login' : 'Sign Up'}\n          </button>\n        </form>\n        <div className=\"toggle-text\" onClick={() => navigate(formType === 'login' ? '/signup' : '/login')}>\n          {formType === 'login' ? 'Don’t have an account? Sign Up' : 'Already have an account? Login'}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginSignup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}